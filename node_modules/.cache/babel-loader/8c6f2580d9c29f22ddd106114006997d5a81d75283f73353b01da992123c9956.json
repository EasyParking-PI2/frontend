{"ast":null,"code":"const API_URL = 'http://localhost:5000/api';\nconst API_URL2 = 'http://localhost:3000/api';\n\n// Função para autenticar o usuário e obter o token\nexport async function login(credentials) {\n  const response = await fetch(`${API_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  });\n  if (!response.ok) {\n    throw new Error('Falha ao autenticar');\n  }\n  const data = await response.json();\n  return data.token; // Retorna o token de autenticação\n}\n\n// Função para obter todas as vagas\nexport async function getParkingSlots() {\n  const token = localStorage.getItem('authToken');\n  const response = await fetch(`${API_URL}/vagas`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Falha ao obter as vagas');\n  }\n  return response.json();\n}\n\n// Função para cadastrar um novo carro\nexport async function createVehicle(vehicleData) {\n  const token = localStorage.getItem('authToken');\n  const response = await fetch(`${API_URL}/veiculos`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify(vehicleData)\n  });\n  if (!response.ok) {\n    throw new Error('Falha ao cadastrar o veículo');\n  }\n  return response.json();\n}\n\n// Função para cadastrar uma nova vaga\nexport async function createSlot(slotData) {\n  const token = localStorage.getItem('authToken');\n  const response = await fetch(`${API_URL}/vagas`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify(slotData)\n  });\n  if (!response.ok) {\n    throw new Error('Falha ao cadastrar a vaga');\n  }\n  return response.json();\n}\nexport async function createUser(userData) {\n  const response = await fetch(`${API_URL2}/user`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  });\n  if (!response.ok) {\n    throw new Error('Falha ao registrar o usuário');\n  }\n  return response.json();\n}","map":{"version":3,"names":["API_URL","API_URL2","login","credentials","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","token","getParkingSlots","localStorage","getItem","createVehicle","vehicleData","createSlot","slotData","createUser","userData"],"sources":["F:/BSI/PI2/EasyParking/frontend/src/services/api.js"],"sourcesContent":["const API_URL = 'http://localhost:5000/api';\r\n\r\nconst API_URL2 = 'http://localhost:3000/api';\r\n\r\n// Função para autenticar o usuário e obter o token\r\nexport async function login(credentials) {\r\n   const response = await fetch(`${API_URL}/login`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(credentials)\r\n   });\r\n   if (!response.ok) {\r\n      throw new Error('Falha ao autenticar');\r\n   }\r\n   const data = await response.json();\r\n   return data.token;  // Retorna o token de autenticação\r\n}\r\n\r\n// Função para obter todas as vagas\r\nexport async function getParkingSlots() {\r\n   const token = localStorage.getItem('authToken');\r\n   const response = await fetch(`${API_URL}/vagas`, {\r\n      headers: {\r\n         'Authorization': `Bearer ${token}`,\r\n      },\r\n   });\r\n   if (!response.ok) {\r\n      throw new Error('Falha ao obter as vagas');\r\n   }\r\n   return response.json();\r\n}\r\n\r\n// Função para cadastrar um novo carro\r\nexport async function createVehicle(vehicleData) {\r\n   const token = localStorage.getItem('authToken');\r\n   const response = await fetch(`${API_URL}/veiculos`, {\r\n      method: 'POST',\r\n      headers: {\r\n         'Content-Type': 'application/json',\r\n         'Authorization': `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(vehicleData)\r\n   });\r\n   if (!response.ok) {\r\n      throw new Error('Falha ao cadastrar o veículo');\r\n   }\r\n   return response.json();\r\n}\r\n\r\n// Função para cadastrar uma nova vaga\r\nexport async function createSlot(slotData) {\r\n   const token = localStorage.getItem('authToken');\r\n   const response = await fetch(`${API_URL}/vagas`, {\r\n      method: 'POST',\r\n      headers: {\r\n         'Content-Type': 'application/json',\r\n         'Authorization': `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(slotData)\r\n   });\r\n   if (!response.ok) {\r\n      throw new Error('Falha ao cadastrar a vaga');\r\n   }\r\n   return response.json();\r\n}\r\n\r\nexport async function createUser(userData) {\r\n   const response = await fetch(`${API_URL2}/user`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(userData)\r\n   });\r\n   if (!response.ok) {\r\n      throw new Error('Falha ao registrar o usuário');\r\n   }\r\n   return response.json();\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}