{"ast":null,"code":"var _jsxFileName = \"F:\\\\BSI\\\\PI2\\\\EasyParking\\\\frontend\\\\src\\\\components\\\\SlotForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SlotForm() {\n  _s();\n  const [slotData, setSlotData] = useState({\n    id: '',\n    occupied: false\n  });\n  const handleChange = e => {\n    setSlotData({\n      ...slotData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Aqui você faria a requisição POST para o backend\n    console.log('Vaga cadastrada:', slotData);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      mt: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      name: \"id\",\n      label: \"ID da Vaga\",\n      value: slotData.id,\n      onChange: handleChange,\n      fullWidth: true,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      sx: {\n        mt: 3\n      },\n      children: \"Cadastrar Vaga\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n_s(SlotForm, \"SshaTiNyc1S+Yigd0kv9k1XbgKE=\");\n_c = SlotForm;\nexport default SlotForm;\nvar _c;\n$RefreshReg$(_c, \"SlotForm\");","map":{"version":3,"names":["React","useState","Button","TextField","Box","jsxDEV","_jsxDEV","SlotForm","_s","slotData","setSlotData","id","occupied","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","component","onSubmit","sx","mt","children","label","onChange","fullWidth","required","fileName","_jsxFileName","lineNumber","columnNumber","type","variant","_c","$RefreshReg$"],"sources":["F:/BSI/PI2/EasyParking/frontend/src/components/SlotForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction SlotForm() {\r\n   const [slotData, setSlotData] = useState({\r\n      id: '',\r\n      occupied: false,\r\n   });\r\n\r\n   const handleChange = (e) => {\r\n      setSlotData({\r\n         ...slotData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      // Aqui você faria a requisição POST para o backend\r\n      console.log('Vaga cadastrada:', slotData);\r\n   };\r\n\r\n   return (\r\n      <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n         <TextField\r\n            name=\"id\"\r\n            label=\"ID da Vaga\"\r\n            value={slotData.id}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            required\r\n         />\r\n         <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3 }}>\r\n            Cadastrar Vaga\r\n         </Button>\r\n      </Box>\r\n   );\r\n}\r\n\r\nexport default SlotForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,GAAG,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACtCU,EAAE,EAAE,EAAE;IACNC,QAAQ,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACzBJ,WAAW,CAAC;MACT,GAAGD,QAAQ;MACX,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC7B,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,YAAY,GAAIJ,CAAC,IAAK;IACzBA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB;IACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEZ,QAAQ,CAAC;EAC5C,CAAC;EAED,oBACGH,OAAA,CAACF,GAAG;IAACkB,SAAS,EAAC,MAAM;IAACC,QAAQ,EAAEL,YAAa;IAACM,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACzDpB,OAAA,CAACH,SAAS;MACPa,IAAI,EAAC,IAAI;MACTW,KAAK,EAAC,YAAY;MAClBV,KAAK,EAAER,QAAQ,CAACE,EAAG;MACnBiB,QAAQ,EAAEf,YAAa;MACvBgB,SAAS;MACTC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACF5B,OAAA,CAACJ,MAAM;MAACiC,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAC,WAAW;MAACZ,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,EAAC;IAEzD;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEZ;AAAC1B,EAAA,CAlCQD,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAoCjB,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}